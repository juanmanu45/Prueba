"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.APIChecker = void 0;
class APIChecker {
    constructor() {
        this.checks = [];
    }
    addCheck(check) {
        this.checks.push(check);
    }
    applyChecks(req) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            if (!req.body || !req.body.checkResults)
                req.body = Object.assign(Object.assign({}, ((_a = req.body) !== null && _a !== void 0 ? _a : {})), { checkResults: {} });
            for (let check of this.checks) {
                let result = yield check.apply(check.getConfig(), req);
                req.body.checkResults[check.getConfig().check] = result.payload;
                if (!result.approved)
                    return result;
            }
            return { approved: true };
        });
    }
    reject(res, result) {
        if (result.rejection)
            return res.status(result.rejection.code).json(result.rejection.payload);
        return res.status(401).json({ message: 'Unknown reason' });
    }
}
exports.APIChecker = APIChecker;
//# sourceMappingURL=APIChecker.js.map