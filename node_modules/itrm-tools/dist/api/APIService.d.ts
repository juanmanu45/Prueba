import { Express } from 'express';
import { APIRequest } from './APIRequest';
import { APIRouter } from './APIRouter';
import { ExpressConfiguration } from './ExpressConfiguration';
export declare namespace ITRMAPIServiceGlobal {
    var memory: any;
    var service: APIService | undefined;
    var requests: any;
    var routers: any;
    var whitelist: string[];
    var tools: any;
}
export declare interface APIServiceConfig {
    name: string;
    port: string | number;
    express: ExpressConfiguration;
}
export declare interface APIServiceResponse {
    status: string;
    message: string;
    error?: any;
}
export declare class APIService {
    protected server: any;
    protected app: Express;
    protected name: string;
    protected port: number | string;
    protected config: ExpressConfiguration;
    constructor(config: APIServiceConfig);
    init(): void;
    addRouter(router: APIRouter): void;
    addRequest(request: APIRequest): void;
    getServerInformation(): {
        name: string;
        port: string | number;
        routers: any;
        requests: any;
    };
    enableDocumentation(): void;
    run(init: Function): Promise<APIServiceResponse>;
    close(finish: Function): Promise<APIServiceResponse>;
}
